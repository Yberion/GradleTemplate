plugins {
    id 'java-library'
    // Apply the application plugin to add support for building a CLI application.
    id 'application'
    id 'distribution'
    id 'jacoco'

    // Spotless - keep your code spotless with Gradle
    id "com.diffplug.spotless" version "6.4.1"
    id "com.github.ben-manes.versions" version "0.42.0"
    id "io.freefair.lombok" version "6.4.1"
}

group = 'fr.brandon'
version = '18.0.0'

sourceCompatibility = JavaVersion.VERSION_18
targetCompatibility = JavaVersion.VERSION_18

compileJava.dependsOn 'spotlessApply'
test.finalizedBy 'jacocoTestReport'

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    // tinylog2 for logging
    implementation 'org.tinylog:tinylog-api:2.5.0-M1.1'
    implementation 'org.tinylog:tinylog-impl:2.5.0-M1.1'
    implementation "org.mapstruct:mapstruct:1.5.0.RC1"

    annotationProcessor "org.mapstruct:mapstruct-processor:1.5.0.RC1"

    // Use JUnit Jupiter API for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
}

application {
    // Define the main class for the application.
    mainClassName = 'fr.brandon.template.App'
}

jacoco {
    // Workaround until 0.8.8 official release
    // https://www.jacoco.org/jacoco/trunk/doc/changes.html
    toolVersion = "0.8.8-SNAPSHOT"
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()

    jacoco {
        // Don't check the App that only contain the main()
        excludes += [ 'fr/brandon/template/App' ]
    }
}

jacocoTestReport {
    // Display everything except App
    classDirectories.setFrom(
        fileTree(dir: 'build/classes/java/main/fr/brandon/template/')
            .filter({file -> (file.name != 'App.class') })
    )

    reports {
        xml.required = true
    }
}

spotless {
    encoding 'UTF-8'
    format 'misc', {
        target '*.gradle', '*.md'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        target '**/*.java'
        toggleOffOn()

        licenseHeaderFile 'resources/spotless/license/LICENSE.spotless'

        importOrder()
        removeUnusedImports()
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()

        eclipse().configFile('resources/eclipse/formatter/Brandon_Java.xml')
    }
}
